{
    "sourceFile": "src/components/BoostsModal.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1757623249212,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1757623249212,
            "name": "Commit-0",
            "content": "import { X, Zap, Timer } from \"lucide-react\";\nimport { useState } from \"react\";\n\ninterface BoostItem {\n  id: string;\n  name: string;\n  icon: string;\n  count: number;\n  effect: string;\n  duration: string;\n  color: string;\n}\n\ninterface BoostsModalProps {\n  isOpen: boolean;\n  onClose: () => void;\n  onUseBoost?: (boostId: string, amount: number) => void;\n}\n\nexport function BoostsModal({ isOpen, onClose, onUseBoost }: BoostsModalProps) {\n  const [selectedBoost, setSelectedBoost] = useState<string | null>(null);\n\n  const boosts: BoostItem[] = [\n    {\n      id: \"production\",\n      name: \"Honey Rush\",\n      icon: \"üçØ\",\n      count: 15,\n      effect: \"+500% honey production\",\n      duration: \"10 minutes\",\n      color: \"from-amber-400 to-amber-600\"\n    },\n    {\n      id: \"spawning\",\n      name: \"Bee Frenzy\",\n      icon: \"üêù\",\n      count: 8,\n      effect: \"+250% bee spawning rate\",\n      duration: \"5 minutes\",\n      color: \"from-yellow-400 to-yellow-600\"\n    },\n    {\n      id: \"shipping\",\n      name: \"Speed Delivery\",\n      icon: \"üöö\",\n      count: 12,\n      effect: \"+300% shipping speed\",\n      duration: \"15 minutes\",\n      color: \"from-blue-400 to-blue-600\"\n    },\n    {\n      id: \"earnings\",\n      name: \"Golden Touch\",\n      icon: \"üí∞\",\n      count: 6,\n      effect: \"+400% honey value\",\n      duration: \"8 minutes\",\n      color: \"from-green-400 to-green-600\"\n    },\n    {\n      id: \"soul\",\n      name: \"Soul Boost\",\n      icon: \"‚ú®\",\n      count: 3,\n      effect: \"+200% soul honey gain\",\n      duration: \"20 minutes\",\n      color: \"from-purple-400 to-purple-600\"\n    }\n  ];\n\n  const handleUse = (boostId: string, amount: number) => {\n    onUseBoost?.(boostId, amount);\n    setSelectedBoost(null);\n  };\n\n  if (!isOpen) return null;\n\n  return (\n    <div className=\"fixed inset-0 bg-black/50 flex items-center justify-center z-50 p-4\">\n      <div className=\"relative bg-gradient-to-b from-white via-amber-50 to-amber-100 rounded-3xl p-6 w-full max-w-md shadow-2xl border-4 border-amber-300 max-h-[90vh] overflow-hidden\">\n        {/* Shadow for 3D effect */}\n        <div className=\"absolute inset-0 transform translate-y-2 bg-amber-900/20 rounded-3xl -z-10\" />\n        \n        {/* Inner highlight */}\n        <div className=\"absolute inset-0 bg-gradient-to-b from-white/30 via-white/10 to-transparent rounded-3xl\" />\n        \n        {/* Close button */}\n        <button\n          onClick={onClose}\n          className=\"absolute top-4 right-4 w-8 h-8 bg-gradient-to-br from-red-500 to-red-600 rounded-full flex items-center justify-center text-white hover:scale-110 transition-transform shadow-lg border-2 border-red-400 z-10\"\n        >\n          <X className=\"w-4 h-4\" />\n        </button>\n\n        {/* Header */}\n        <div className=\"text-center mb-6 relative\">\n          <h2 className=\"text-amber-900 font-bold text-xl mb-2\">BOOST INVENTORY</h2>\n          <div className=\"flex justify-center\">\n            <div className=\"bg-amber-200 h-1 w-16 rounded-full shadow-inner\">\n              <div className=\"bg-gradient-to-r from-amber-400 to-amber-500 h-full w-full rounded-full shadow-sm\"></div>\n            </div>\n          </div>\n        </div>\n\n        {/* Boost Items */}\n        <div className=\"space-y-3 max-h-96 overflow-y-auto mb-4\">\n          {boosts.map((boost) => (\n            <div\n              key={boost.id}\n              className=\"relative bg-gradient-to-r from-white to-amber-50 rounded-2xl p-4 border-2 border-amber-200 shadow-lg\"\n            >\n              {/* Shadow layer */}\n              <div className=\"absolute inset-0 transform translate-y-1 bg-amber-900/10 rounded-2xl -z-10\" />\n              \n              <div className=\"flex items-center justify-between relative\">\n                <div className=\"flex items-center space-x-3\">\n                  {/* Boost icon */}\n                  <div className={`w-12 h-12 bg-gradient-to-br ${boost.color} rounded-full flex items-center justify-center shadow-lg border-2 border-white/50 relative`}>\n                    <div className=\"absolute inset-0 bg-gradient-to-b from-white/30 via-white/10 to-transparent rounded-full\" />\n                    <span className=\"text-xl relative\">{boost.icon}</span>\n                    <div className=\"absolute top-1.5 left-2 w-2 h-2 bg-white/40 rounded-full blur-sm\" />\n                  </div>\n                  \n                  <div className=\"flex-1\">\n                    <div className=\"text-amber-900 font-bold text-sm\">{boost.name}</div>\n                    <div className=\"text-amber-700 text-xs\">{boost.effect}</div>\n                    <div className=\"flex items-center space-x-1 mt-1\">\n                      <Timer className=\"w-3 h-3 text-amber-600\" />\n                      <span className=\"text-amber-600 text-xs\">{boost.duration}</span>\n                    </div>\n                  </div>\n                </div>\n                \n                <div className=\"flex flex-col items-end space-y-1\">\n                  {/* Count badge */}\n                  <div className=\"bg-gradient-to-r from-amber-400 to-amber-600 text-white px-2 py-1 rounded-full text-xs font-bold shadow-lg\">\n                    {boost.count}\n                  </div>\n                  \n                  {/* Action buttons */}\n                  <div className=\"flex space-x-1\">\n                    <button\n                      onClick={() => handleUse(boost.id, 1)}\n                      disabled={boost.count === 0}\n                      className={`px-2 py-1 rounded-lg text-xs font-bold transition-all duration-200 ${\n                        boost.count > 0\n                          ? \"bg-gradient-to-r from-green-500 to-green-600 text-white hover:scale-105 active:scale-95 shadow-lg\"\n                          : \"bg-gray-300 text-gray-500 cursor-not-allowed\"\n                      }`}\n                    >\n                      USE\n                    </button>\n                    \n                    {boost.count > 1 && (\n                      <button\n                        onMouseDown={(e) => {\n                          const button = e.currentTarget;\n                          const timeout = setTimeout(() => {\n                            // Multi-use logic (50% discount for bulk use)\n                            setSelectedBoost(boost.id);\n                            // Show confirmation dialog for multi-use\n                          }, 500); // Hold for 500ms\n                          \n                          const handleMouseUp = () => {\n                            clearTimeout(timeout);\n                            button.removeEventListener('mouseup', handleMouseUp);\n                            button.removeEventListener('mouseleave', handleMouseUp);\n                          };\n                          \n                          button.addEventListener('mouseup', handleMouseUp);\n                          button.addEventListener('mouseleave', handleMouseUp);\n                        }}\n                        className=\"px-2 py-1 rounded-lg text-xs font-bold bg-gradient-to-r from-blue-500 to-blue-600 text-white hover:scale-105 active:scale-95 shadow-lg transition-all duration-200\"\n                      >\n                        <Zap className=\"w-3 h-3\" />\n                      </button>\n                    )}\n                  </div>\n                </div>\n              </div>\n            </div>\n          ))}\n        </div>\n\n        {/* Active Boosts */}\n        <div className=\"bg-gradient-to-r from-green-200 to-green-300 rounded-2xl p-3 mb-4 border-2 border-green-400 shadow-lg\">\n          <div className=\"relative\">\n            <div className=\"absolute inset-0 transform translate-y-0.5 bg-green-900/20 rounded-2xl -z-10\" />\n            <div className=\"relative\">\n              <div className=\"text-green-900 font-bold text-sm mb-2\">Active Boosts</div>\n              <div className=\"space-y-1\">\n                <div className=\"flex justify-between text-xs\">\n                  <span className=\"text-green-800\">üçØ Honey Rush</span>\n                  <span className=\"text-green-700\">2:45 remaining</span>\n                </div>\n                <div className=\"bg-green-400 h-1 rounded-full\">\n                  <div className=\"bg-green-600 h-full w-3/4 rounded-full\"></div>\n                </div>\n              </div>\n            </div>\n            <div className=\"absolute top-0 left-2 w-3 h-3 bg-white/30 rounded-full blur-sm\" />\n          </div>\n        </div>\n\n        {/* Footer */}\n        <div className=\"text-center\">\n          <div className=\"text-amber-700 text-xs\">\n            üí° Hold ‚ö° button for multi-use with 50% discount\n          </div>\n        </div>\n      </div>\n\n      {/* Multi-use confirmation modal */}\n      {selectedBoost && (\n        <div className=\"fixed inset-0 bg-black/70 flex items-center justify-center z-60\">\n          <div className=\"bg-white rounded-2xl p-6 max-w-sm mx-4 shadow-2xl\">\n            <div className=\"text-center\">\n              <h3 className=\"text-lg font-bold text-gray-900 mb-4\">Multi-Use Boost</h3>\n              <p className=\"text-gray-700 mb-4\">Use multiple boosts at 50% discount?</p>\n              <div className=\"flex space-x-3\">\n                <button\n                  onClick={() => setSelectedBoost(null)}\n                  className=\"flex-1 bg-gray-300 text-gray-700 py-2 px-4 rounded-lg font-bold\"\n                >\n                  Cancel\n                </button>\n                <button\n                  onClick={() => handleUse(selectedBoost, 5)}\n                  className=\"flex-1 bg-gradient-to-r from-amber-500 to-amber-600 text-white py-2 px-4 rounded-lg font-bold\"\n                >\n                  Use 5\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}"
        }
    ]
}